#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –æ–±—É—á–µ–Ω–∏—è YOLOv8 –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≥—Ä—è–∑–Ω—ã—Ö/—á–∏—Å—Ç—ã—Ö –º–∞—à–∏–Ω
–¢–æ–ª—å–∫–æ –æ–±—É—á–µ–Ω–∏–µ - –Ω–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""

import os
from ultralytics import YOLO

def main():
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    data_path = "../dataset"
    model_size = "s"  # yolov8n - —Å–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è
    epochs = 50       # –º–µ–Ω—å—à–µ —ç–ø–æ—Ö –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞
    device = "1"      # GPU 0 (–ø–æ—Å–ª–µ CUDA_VISIBLE_DEVICES=1)
    
    print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ YOLOv8{model_size}")
    print(f"üìÅ –î–∞–Ω–Ω—ã–µ: {data_path}")
    print(f"üéØ –≠–ø–æ—Ö–∏: {epochs}")
    print(f"üíª GPU: {device}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    if not os.path.exists(data_path):
        print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º...")
        os.system("cd ../dataset_raw && python convert_yolo_to_classification.py --input dataset_raw --output data_cars_converted")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
    model = YOLO(f"yolov8{model_size}-cls.pt")
    
    # –û–±—É—á–∞–µ–º
    results = model.train(
        data=data_path,
        epochs=epochs,
        device=device,
        project="runs/classify",
        name="dirty_car_simple",
        verbose=True
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª—É—á—à—É—é –º–æ–¥–µ–ª—å
    best_model_path = "runs/classify/dirty_car_simple/weights/best.pt"
    
    print(f"‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üì¶ –ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {best_model_path}")
    
    # –ö–æ–ø–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –≤ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ
    os.makedirs("trained_models", exist_ok=True)
    os.system(f"cp {best_model_path} trained_models/dirty_car_yolo.pt")
    print(f"üìã –ú–æ–¥–µ–ª—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞: trained_models/dirty_car_yolo.pt")

if __name__ == "__main__":
    main()
